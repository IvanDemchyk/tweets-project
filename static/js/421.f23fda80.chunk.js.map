{"version":3,"file":"static/js/421.f23fda80.chunk.js","mappings":"yMAAaA,EAAY,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAC1B,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAKJ,EAAKK,OAAQC,IAAKN,EAAKA,QACjCC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIF,EAAKO,OAAO,cAChBN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIF,EAAKQ,UAAU,kBAGzB,ECNaC,EAAa,SAAHV,GAAmB,IAAbW,EAAKX,EAALW,MAC3B,OACEP,EAAAA,EAAAA,KAAA,MAAAD,SACGQ,EAAMC,KAAI,SAACX,GAAI,OACdG,EAAAA,EAAAA,KAACL,EAAS,CAAeE,KAAMA,GAAfA,EAAKY,GAAkB,KAI/C,E,kBCRAC,EAAAA,EAAAA,SAAAA,QAAyB,+CAElB,IAAMC,EAAQ,eAAAf,GAAAgB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAe,OAARP,EAAIE,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,EAACG,EAAAE,KAAA,EACdb,EAAAA,EAAAA,IAAU,cAADgB,OAAeV,EAAI,aAAY,KAAD,EAAhD,OAARC,EAAQI,EAAAM,KAAAN,EAAAO,OAAA,SACPX,EAASY,MAAI,wBAAAR,EAAAS,OAAA,GAAAf,EAAA,KACrB,kBAHoB,OAAAnB,EAAAmC,MAAA,KAAAZ,UAAA,KC+BrB,EA9Be,WACb,IAAAa,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BzB,EAAK2B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAmB9B,OAjBAG,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAU,eAAAlD,GAAAgB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAgC,EAAA,OAAAlC,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMZ,IAAW,KAAD,EAAzBoC,EAAM1B,EAAAM,KACZS,EAASW,GAAQ1B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA2B,GAAA3B,EAAA,SAEjBmB,EAAQnB,EAAA2B,IAAQ,QAEI,OAFJ3B,EAAAC,KAAA,GAEhBsB,GAAa,GAAOvB,EAAA4B,OAAA,6BAAA5B,EAAAS,OAAA,GAAAf,EAAA,wBAEvB,kBATe,OAAAnB,EAAAmC,MAAA,KAAAZ,UAAA,KAUhB2B,GACF,GAAG,IAEHI,QAAQC,IAAIxC,MAGVb,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG4C,GAAa,aACbJ,IAASvC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwC,IACfhC,IAASP,EAAAA,EAAAA,KAACM,EAAU,CAACC,MAAOA,MAGnC,C","sources":["components/TweetItem/TweetItem.jsx","components/TweetsList/TweetsList.jsx","services/tweets-api.js","pages/Tweets.jsx"],"sourcesContent":["export const TweetItem = ({ user }) => {\r\n  return (\r\n    <li>\r\n      <img src={user.avatar} alt={user.user} />\r\n      <p>{user.tweets} TWEETS</p>\r\n      <p>{user.followers} FOLLOWERS</p>\r\n    </li>\r\n  );\r\n};\r\n","import { TweetItem } from \"components/TweetItem/TweetItem\";\r\n\r\nexport const TweetsList = ({ users }) => {\r\n  return (\r\n    <ul>\r\n      {users.map((user) => (\r\n        <TweetItem key={user.id} user={user} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://64316fd8d4518cfb0e6169d4.mockapi.io/\";\r\n\r\nexport const getUsers = async (page = 1) => {\r\n  const response = await axios.get(`users?page=${page}&limit=4`);\r\n  return response.data;\r\n};\r\n","import { TweetsList } from \"components/TweetsList/TweetsList\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { getUsers } from \"services/tweets-api\";\r\n\r\nconst Tweets = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const result = await getUsers();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  console.log(getUsers());\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && \"Loading...\"}\r\n      {error && <div>{error}</div>}\r\n      {users && <TweetsList users={users} />}\r\n    </div>\r\n  );\r\n};\r\nexport default Tweets;\r\n"],"names":["TweetItem","_ref","user","_jsxs","children","_jsx","src","avatar","alt","tweets","followers","TweetsList","users","map","id","axios","getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","arguments","wrap","_context","prev","next","length","undefined","concat","sent","abrupt","data","stop","apply","_useState","useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","fetchUsers","result","t0","finish","console","log"],"sourceRoot":""}