{"version":3,"file":"static/js/848.4c3aba90.chunk.js","mappings":"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","sources":["components/Filter/Filter.syled.js","components/Filter/Filter.jsx","components/LoadButton/LoadButton.styled.js","components/LoadButton/LoadButton.jsx","services/tweets-api.js","components/TweetItem/TweetItem.styled.js","components/TweetItem/TweetItem.jsx","services/number-format.js","components/TweetsList/TweetList.styled.js","components/TweetsList/TweetsList.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Select = styled.select`\r\n  padding: 10px 20px;\r\n  font-size: 20px;\r\n  background-color: white;\r\n  border: 2px solid #5ca7d3;\r\n  border-radius: 4px;\r\n  appearance: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #2159f3;\r\n  }\r\n`;\r\nexport const Option = styled.option`\r\n  font-size: 16px;\r\n  padding: 15px 8px;\r\n`;\r\n","import { Select, Option } from \"./Filter.syled\";\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <Select name=\"dropdown\" id=\"dropdown\" value={filter} onChange={onChange}>\r\n      <Option value=\"show all\">Show all</Option>\r\n      <Option value=\"follow\">Follow</Option>\r\n      <Option value=\"following\">Following</Option>\r\n    </Select>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadBtn = styled.button`\r\n  margin: auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { LoadBtn } from \"./LoadButton.styled\";\r\n\r\nexport const LoadButton = ({ onClick }) => {\r\n  return <LoadBtn onClick={onClick}>Load More</LoadBtn>;\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://64316fd8d4518cfb0e6169d4.mockapi.io/\";\r\n\r\nexport const getUsers = async (page = 1) => {\r\n  const response = await axios.get(`users?page=${page}&limit=3`);\r\n  return response.data;\r\n};\r\n\r\nexport const followTweet = async (id, body) => {\r\n  const response = await axios.put(`users/${id}`, body);\r\n  return response.data;\r\n};\r\n\r\nexport const updateUser = async (id) => {\r\n  const response = await axios.get(`users/${id}`);\r\n  return response.data;\r\n};\r\n","import styled from \"styled-components\";\r\nimport figure from \"images/figure.png\";\r\nimport logo from \"images/logo.png\";\r\nimport ellipse from \"images/Ellipse.png\";\r\nimport rect from \"images/Rectangle.png\";\r\n\r\nexport const TweetBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 380px;\r\n\r\n  background-image: url(\"${logo}\"), url(\"${figure}\"), url(\"${ellipse}\"),\r\n    url(\"${rect}\"),\r\n    linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\r\n  background-size: 76px, 308px, 106px, 380px, 380px;\r\n  background-repeat: no-repeat;\r\n  background-position: 20px 20px, right 36px top 28px, top 170px left 137px,\r\n    center center, center center;\r\n\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n  padding-top: 178px;\r\n  padding-bottom: 36px;\r\n`;\r\n\r\nexport const AvatarImg = styled.img`\r\n  width: 78px;\r\n\r\n  border-radius: 50px;\r\n  overflow: hidden;\r\n  object-fit: cover;\r\n`;\r\nexport const StatsBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  padding: 26px 0;\r\n`;\r\n\r\nexport const StatsText = styled.p`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n`;\r\n\r\nexport const TweetButton = styled.button`\r\n  padding: 14px 39px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 1.2;\r\n  text-transform: uppercase;\r\n  color: #373737;\r\n  background: ${(props) => (props.following ? \"#5CD3A8\" : \"#EBD8FF\")};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { NumberFormat } from \"services/number-format\";\r\nimport { followTweet } from \"services/tweets-api\";\r\n\r\nimport {\r\n  TweetBox,\r\n  AvatarImg,\r\n  StatsBox,\r\n  StatsText,\r\n  TweetButton,\r\n} from \"./TweetItem.styled\";\r\n\r\nexport const TweetItem = ({ user }) => {\r\n  const [isFollowing, setIsFollowing] = useState(user.following);\r\n  const [followers, setFollowers] = useState(user.followers);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(`user-${user.id}`);\r\n    if (stored) {\r\n      setIsFollowing(JSON.parse(stored));\r\n    }\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`user-${user.id}`, isFollowing);\r\n  }, [isFollowing, user.id]);\r\n\r\n  const updateTweet = async (toggleFollowing, toggleFollowers) => {\r\n    try {\r\n      const update = {\r\n        ...user,\r\n        followers: toggleFollowers,\r\n        following: toggleFollowing,\r\n      };\r\n      await followTweet(user.id, update);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const toggleButton = () => {\r\n    const toggleFollowing = !isFollowing;\r\n    const toggleFollowers = toggleFollowing ? followers + 1 : followers - 1;\r\n\r\n    setIsFollowing(toggleFollowing);\r\n    setFollowers(toggleFollowers);\r\n    updateTweet(toggleFollowing, toggleFollowers);\r\n  };\r\n\r\n  const { avatar, tweets } = user;\r\n\r\n  return (\r\n    <TweetBox>\r\n      <AvatarImg src={avatar} alt={user} />\r\n      <StatsBox>\r\n        <StatsText>{tweets} TWEETS</StatsText>\r\n        <StatsText>{NumberFormat(followers)} FOLLOWERS</StatsText>\r\n      </StatsBox>\r\n\r\n      <TweetButton isfollowing={isFollowing.toString()} onClick={toggleButton}>\r\n        {isFollowing ? \"Following\" : \"Follow\"}\r\n      </TweetButton>\r\n    </TweetBox>\r\n  );\r\n};\r\n","export const NumberFormat = (number) => {\r\n  return new Intl.NumberFormat(\"en-UK\").format(number);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n  margin-bottom: 30px;\r\n`;\r\n","import { TweetItem } from \"components/TweetItem/TweetItem\";\r\n\r\nimport { List } from \"./TweetList.styled\";\r\n\r\nexport const TweetsList = ({ users }) => {\r\n  return (\r\n    <List>\r\n      {users.map((user) => (\r\n        <li key={user.id}>\r\n          <TweetItem user={user} />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { Filter } from \"components/Filter/Filter\";\r\nimport { LoadButton } from \"components/LoadButton/LoadButton\";\r\nimport { TweetsList } from \"components/TweetsList/TweetsList\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { getUsers } from \"services/tweets-api\";\r\nimport { Wrapper, BackLink } from \"components/Layout/Layout.styled\";\r\n\r\nlet page = 1;\r\n\r\nconst Tweets = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filter, setFilter] = useState(\"show all\");\r\n  const location = useLocation();\r\n  const backLink = location?.state?.from ?? \"/\";\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const result = await getUsers();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const getMoreUsers = async () => {\r\n    try {\r\n      const users = await getUsers((page += 1));\r\n      setUsers((prev) => [...prev, ...users]);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const filterUsers = (user) => {\r\n    switch (filter) {\r\n      case \"show all\":\r\n        return true;\r\n      case \"follow\":\r\n        return !user.following;\r\n      case \"following\":\r\n        return user.following;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const changeFilter = (evt) => {\r\n    setFilter(evt.target.value);\r\n  };\r\n\r\n  const filteredUsers = users.filter(filterUsers);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <BackLink to={backLink}>Back</BackLink>\r\n        <Filter value={filter} onChange={changeFilter} />\r\n      </Wrapper>\r\n\r\n      {isLoading && \"Loading...\"}\r\n      {error && <div>{error}</div>}\r\n      {users && <TweetsList users={filteredUsers} />}\r\n      <LoadButton onClick={getMoreUsers} />\r\n    </>\r\n  );\r\n};\r\nexport default Tweets;\r\n"],"names":["Select","styled","_templateObject","_taggedTemplateLiteral","Option","_templateObject2","Filter","_ref","filter","onChange","_jsxs","name","id","value","children","_jsx","LoadBtn","LoadButton","onClick","axios","getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_args","arguments","wrap","_context","prev","next","length","undefined","concat","sent","abrupt","data","stop","apply","followTweet","_ref2","_callee2","body","_context2","_x","_x2","TweetBox","figure","AvatarImg","StatsBox","_templateObject3","StatsText","_templateObject4","TweetButton","_templateObject5","props","following","TweetItem","user","_useState","useState","_useState2","_slicedToArray","isFollowing","setIsFollowing","_useState3","followers","_useState4","setFollowers","useEffect","stored","localStorage","getItem","JSON","parse","setItem","number","updateTweet","toggleFollowing","toggleFollowers","update","_objectSpread","t0","console","log","avatar","tweets","src","alt","Intl","NumberFormat","format","isfollowing","toString","List","TweetsList","users","map","_location$state$from","_location$state","setUsers","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setFilter","location","useLocation","backLink","state","from","fetchUsers","result","finish","getMoreUsers","_users","_toConsumableArray","filteredUsers","_Fragment","Wrapper","BackLink","to","evt","target"],"sourceRoot":""}